<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     13. Nov. 2015 12:46:50                                                        

     ys.autocompile    
     Automatically builds YouScope.
                   
     Moritz Lang                                                                
     ====================================================================== -->
<project name="ys.autocompile" default="autocompile">
    <description>
    	Automatically builds YouScope.
    </description>
	
	<property environment="env"/>
	<property name="ys.shared" value="common" />
	<property name="ys.client" value="client" />
	<property name="ys.server" value="server" />
	<property name="ys.plugins" value="plugins" />
	<property name="ys.build" value="build"/>
	<property name="ys.bin" value="bin"/>
	<property name="ys.meta_inf" value="META-INF" />
	<property name="ys.manifest" value="${ys.meta_inf}/MANIFEST.MF" />
	<property name="ys.dist" value="${env.YOUSCOPE_DIST_DIR}"/>
	
	<script language="javascript">
		s = project.getProperty('basedir');
		lastIdx1 = s.lastIndexOf('/');
		lastIdx2 = s.lastIndexOf('\\');
		if(lastIdx1 > lastIdx2)
			lastIdx = lastIdx1;
		else
			lastIdx = lastIdx2;
		project.setProperty('project', s.substring(lastIdx+1));
	</script>

    <target name="autocompile" depends="-autocompile.init, -buildMainJar, -buildClientJar, -buildServerJar, -buildSharedJar, -buildPluginJar">
        <!-- Calls appropriate target based on -autocompile.init results by depends mechanism. -->
    </target>
	<target name="-autocompile.init">
		<echo>Project name is ${project}...</echo>
		<condition property="isClientJar">
			<equals arg1="${project}" arg2="youscope-client" />
		</condition>	
		<condition property="isServerJar">
			<equals arg1="${project}" arg2="youscope-server" />
		</condition>
		<condition property="isSharedJar">
			<or>
				<equals arg1="${project}" arg2="youscope-addon" />
				<equals arg1="${project}" arg2="youscope-common" />
			</or>
		</condition>   
		<condition property="isMainJar">
			<or>
				<equals arg1="${project}" arg2="youscope-starter" />
			</or>
		</condition>   
		<condition property="isPluginJar">
			<not>
				<or>
					<!-- isClientJar -->
					<equals arg1="${project}" arg2="youscope-client" />
					
					<!-- isServerJar -->
					<equals arg1="${project}" arg2="youscope-server" />
					
					<!-- isSharedJar -->
					<equals arg1="${project}" arg2="youscope-addon" />
					<equals arg1="${project}" arg2="youscope-common" />
					
					<!-- isMainJar -->
					<equals arg1="${project}" arg2="youscope-starter" />
					
					<!-- others -->
					<equals arg1="${project}" arg2="youscope-all" />
					<equals arg1="${project}" arg2="youscope-documentation-converter" />
				</or>
			</not>
		</condition>   
	</target>
	
	
	<target name="-buildJar" description="Build jar file.">
		<echo>Creating ${ys.dist}/${folder}/${project}.jar...</echo>
        <jar jarfile="${ys.dist}/${folder}/${project}.jar" manifest="${basedir}/${ys.manifest}" >
        	<fileset dir="${basedir}/${ys.bin}"></fileset>
        	<zipfileset dir="${basedir}/${ys.meta_inf}" prefix="META-INF" />
        </jar> 
    </target>
	
	<target name="-buildClientJar" if="isClientJar"> 
		<echo>Compiling ${project} to client directory...</echo>
		<antcall target="-buildJar">
			<param name="folder" value="${ys.client}" />
			<param name="project" value="${project}" />	
		</antcall>		
	</target>
	
	<target name="-buildMainJar" if="isMainJar"> 
			<echo>Compiling ${project} to client directory...</echo>
			<antcall target="-buildJar">
				<param name="folder" value="." />
				<param name="project" value="${project}" />	
			</antcall>		
		</target>

	<target name="-buildServerJar" if="isServerJar"> 
		<echo>Compiling ${project} to server directory...</echo>
		<antcall target="-buildJar">
			<param name="folder" value="${ys.server}" />
			<param name="project" value="${project}" />	
		</antcall>		
	</target>
	
	<target name="-buildSharedJar" if="isSharedJar"> 
		<echo>Compiling ${project} to shared directory...</echo>
		<antcall target="-buildJar">
			<param name="folder" value="${ys.shared}" />
			<param name="project" value="${project}" />	
		</antcall>		
	</target>
	
	<target name="-buildPluginJar" if="isPluginJar"> 
		<echo>Compiling ${project} to plugin directory...</echo>
		<antcall target="-buildJar">
			<param name="folder" value="${ys.plugins}" />
			<param name="project" value="${project}" />	
		</antcall>		
	</target>

</project>
