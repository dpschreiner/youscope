/**
 * 
 */
package org.youscope.server;

import java.util.Vector;

/**
 * This class represents the result of parsing a configuration file, i.e. all warnings during parsing it, and meta information about who generated the configuration file.
 * @author Moritz Lang
 * 
 */
class ConfigFileParseResult
{
	private ConfigFileGenerator					configFileGenerator				= new ConfigFileGenerator("unknown", "unknown");
	private final Vector<ConfigFileGenerator>	compatibleConfigFileGenerators	= new Vector<ConfigFileGenerator>();
	private final Vector<String>				warnings						= new Vector<String>();

	public void setConfigFileGenerator(ConfigFileGenerator configFileGenerator)
	{
		this.configFileGenerator = configFileGenerator;
	}

	public void addCompatibleGenerator(ConfigFileGenerator compatibleConfigFileGenerator)
	{
		compatibleConfigFileGenerators.add(compatibleConfigFileGenerator);
	}

	public void setGeneratorToYouScope()
	{
		configFileGenerator = new ConfigFileGenerator();
	}

	public void addWarning(String warning, String line)
	{
		warnings.add(line + " (" + warning + ")");
	}

	private String getCompatibilityMessage()
	{
		// Check if the config file was created by this version.
		ConfigFileGenerator thisGenerator = new ConfigFileGenerator();
		if(thisGenerator.equals(configFileGenerator))
			return null;

		// Check if the program generating this config file claims to be compatible to us.
		for(ConfigFileGenerator generator : compatibleConfigFileGenerators)
		{
			if(thisGenerator.equals(generator))
				return null;
		}

		// Check if the generator is microManager. If yes, output a special message which is not as
		// unpolite as the message shown to any other generator.
		if(configFileGenerator.name.equals("MicroManager"))
		{
			return "The loaded configuration file was generated by Micro-Manager.\n" + "All settings in the configuration file were adopted. However, " + "although the configuration files generated and used by YouScope are fully compatible with the ones used by μManager, " + "several settings necessary for YouScope to function probably are commonly not set by the generating μManager version.\n" + "For YouScope to function probably, we therefore recommend to re-configure the microscope settings in YouScope.\n" + "Remark: the configuration files generated by YouScope can -without problems- be used also for μManager.";

		}
		else if(configFileGenerator.name.equals("unknown"))
		{
			return "The loaded configuration file was generated by an unknown source.\n" + "All settings in the configuration file were adopted. However, " + "several settings necessary for YouScope to function probably might or might not be set by the generating program.\n" + "For YouScope to function probably, we therefore recommend to re-configure the microscope settings in YouScope.";
		}
		else if(configFileGenerator.name.equals("YouScope"))
		{
			try
			{
				// this YouScope version is compatible with all versions before.
				if(Double.parseDouble(configFileGenerator.version) <= Double.parseDouble(thisGenerator.version))
					return null;
			}
			catch(@SuppressWarnings("unused") NumberFormatException e)
			{
				// all yet known YouScope versions have a double version number. Thus, it must be a newer version.
			}
			return "The loaded configuration file was generated by a newer version of YouScope.\n" + "All settings in the configuration file were adopted. However, " + "the generating, newer version of YouScope did not indicate to be compatible to this version.\n" + "We therefore recommend to actualize the YouScope version on this computer, or at least to check the configuration file " + "to ensure that this version of YouScope runs probably with the given configuration.";
		}
		else
		{
			return "The loaded configuration file was generated by " + configFileGenerator.name + " " + configFileGenerator.version + ".\n" + "All settings in the configuration file were adopted. However, " + "the generating program " + configFileGenerator.name + " did not indicate to be compatible to this version.\n" + "Several settings necessary for YouScope to function probably might or might not be set by the generating program.\n" + "For YouScope to function probably, we therefore recommend to re-configure the microscope settings in YouScope.";
		}
	}

	public String getWarningMessage()
	{
		String compatibilityMessage = getCompatibilityMessage();
		if(warnings.size() == 0)
			return compatibilityMessage;
		String message = "The following lines could not be interpreted by YouScope:\n";
		for(String warning : warnings)
		{
			message += warning + "\n";
		}
		if(compatibilityMessage != null)
			message += "\n" + compatibilityMessage;
		return message;
	}
}
